{"version":3,"sources":["components/Kaodashi.tsx","components/Control.tsx","hooks/useWindowSize.tsx","components/Map.tsx","App.tsx","index.tsx"],"names":["Kaodashi","props","shotting","setShotting","imageLoaded","setImageLoaded","image","windowWidth","useState","canvasData","setCanvasData","kaodashiRef","useRef","webcamRef","imageRef","headPosition","heads_position","canvasWidth","canvasHeight","height","width","cameraSize","head_width","cameraSizeResized","cameraPosition","top","left","prevShotting","value","ref","useEffect","current","usePrevious","video","canvas","document","createElement","ctx","getContext","fillStyle","fillRect","save","translate","scale","drawImage","restore","toDataURL","style","mirrored","audio","videoConstraints","position","src","process","key","alt","name","onLoad","Slide","in","direction","backgroundColor","display","flexDirection","justifyContent","alignItems","onClick","fontSize","marginTop","marginBottom","StyledBox","styled","other","Box","flexFlow","right","borderRadius","Control","takeScreenShot","IconButton","color","useWindowSize","isWindowClient","window","innerWidth","innerHeight","undefined","windowSize","setWindowSize","setSize","addEventListener","removeEventListener","Map","allImages","setImage","latitude","longitude","zoom","viewport","setViewport","Object","assign","onViewportChange","bottom","mapStyle","map","i","offsetLeft","offsetTop","App","pickedImage","URLSearchParams","location","search","substring","get","data","Math","floor","random","length","pickRandomImage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba8ad663.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nimport Webcam from 'react-webcam';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Slide from '@material-ui/core/Slide';\n\nimport Image from '../types/Image';\n\nconst usePrevious = <T extends {}>(value: T): T | undefined => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\ninterface Props {\n  shotting: boolean\n  setShotting: (shotting: boolean) => void\n  imageLoaded: boolean\n  setImageLoaded: (loaded: boolean) => void\n  image: Image\n  windowWidth: number\n}\n\nfunction Kaodashi(props: Props) {\n  const {\n    shotting,\n    setShotting,\n    imageLoaded,\n    setImageLoaded,\n    image,\n    windowWidth,\n  } = props;\n\n  const [canvasData, setCanvasData] = useState<string | null>(null);\n\n  const kaodashiRef = useRef<HTMLDivElement>(null);\n  const webcamRef = useRef<Webcam & HTMLVideoElement>(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n\n  const headPosition = image.heads_position[0];\n  const canvasWidth = windowWidth;\n  const canvasHeight = image.height / image.width * canvasWidth;\n  const cameraSize = image.head_width * 2;\n  const cameraSizeResized = cameraSize / image.width * canvasWidth;\n  const cameraPosition = {\n    top: (headPosition[1] - cameraSize / 2) / image.width * canvasWidth,\n    left: (headPosition[0] - cameraSize / 2) / image.width * canvasWidth,\n  }\n\n  const prevShotting = usePrevious(shotting);\n  useEffect(() => {\n    if (!shotting || shotting === prevShotting) {\n      return;\n    }\n    if (\n      !kaodashiRef.current || !imageRef.current\n      || !webcamRef.current || !webcamRef.current.video\n    ) {\n      return;\n    }\n    const canvas = document.createElement('canvas');\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n    ctx.save();\n    ctx.translate(canvasWidth, 0);\n    ctx.scale(-1, 1);\n    ctx.drawImage(webcamRef.current.video, canvasWidth - cameraPosition.left - cameraSizeResized, cameraPosition.top);\n    ctx.restore();\n    ctx.drawImage(imageRef.current, 0, 0, canvasWidth, canvasHeight);\n    setCanvasData(canvas.toDataURL());\n  }, [shotting, prevShotting, cameraPosition, canvasWidth, canvasHeight, cameraSizeResized]);\n\n  return (\n    <div ref={kaodashiRef} style={{ height: canvasHeight }}>\n      {imageLoaded && (\n        <Webcam\n          mirrored\n          audio={false}\n          videoConstraints={{ width: cameraSizeResized, height: cameraSizeResized }}\n          ref={webcamRef}\n          style={{ position: 'absolute', ...cameraPosition }}\n        />\n      )}\n      <img\n        src={`${process.env.PUBLIC_URL}/images/${image.key}.png`}\n        alt={image.name}\n        ref={imageRef}\n        style={{ position: 'absolute', width: '100%' }}\n        onLoad={() => setImageLoaded(true)}\n      />\n      <Slide in={shotting} direction='up'>\n        <div style={{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          backgroundColor: 'white',\n          display: shotting ? 'flex' : 'none',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n          {canvasData && (\n            <img alt='Screenshot' src={canvasData} width={canvasWidth} height={canvasHeight} />\n          )}\n          <CancelIcon\n            onClick={() => {\n              setShotting(false);\n              setCanvasData(null);\n            }}\n            fontSize='large'\n            style={{ marginTop: 15, marginBottom: 100 }}\n          />\n        </div>\n      </Slide>\n    </div>\n  )\n}\n\nexport default Kaodashi;","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport { styled } from '@material-ui/core/styles';\nimport Box, { BoxProps } from '@material-ui/core/Box';\n\ninterface StyledBoxProps {\n  windowWidth: number\n}\n\ninterface Props {\n  windowWidth: number\n  takeScreenShot: () => void\n}\n\nconst StyledBox = styled(({ windowWidth, ...other }: StyledBoxProps & Omit<BoxProps, keyof StyledBoxProps>) => <Box {...other} />)({\n  display: 'flex',\n  flexFlow: 'column',\n  position: 'absolute',\n  right: 5,\n  borderRadius: 25,\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  top: (props: StyledBoxProps) => props.windowWidth / 2 - 48,\n});\n\nfunction Control(props: Props) {\n  const {\n    windowWidth,\n    takeScreenShot,\n  } = props;\n  return (\n    <StyledBox windowWidth={windowWidth}>\n      <IconButton color='primary' onClick={takeScreenShot}>\n        <PhotoCamera />\n      </IconButton>\n    </StyledBox>\n  )\n}\n\nexport default Control;","import { useState, useEffect } from \"react\";\n\nfunction useWindowSize() {\n    const isWindowClient = typeof window === \"object\";\n\n    const [windowSize, setWindowSize] = useState(\n        isWindowClient ? { width: window.innerWidth, height: window.innerHeight } : undefined\n    );\n\n    //👇\n    useEffect(() => {\n        //a handler which will be called on change of the screen resize\n        function setSize() {\n            setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n        }\n\n        if (isWindowClient) {\n            //register the window resize listener\n            window.addEventListener(\"resize\", setSize);\n\n            //un-register the listener\n            return () => window.removeEventListener(\"resize\", setSize);\n        }\n    }, [isWindowClient, setWindowSize]);\n    //☝️\n\n    return windowSize;\n}\n\nexport default useWindowSize;","import React, { useState } from 'react';\n\nimport RoomIcon from '@material-ui/icons/Room';\nimport ReactMapGL, { Marker } from 'react-map-gl';\n\nimport useWindowSize from '../hooks/useWindowSize';\nimport Image from '../types/Image';\n\ninterface Props {\n  image: Image,\n  allImages: Image[],\n  setImage: (image: Image) => void,\n  shotting: boolean,\n}\n\nfunction Map(props: Props) {\n  const { image, allImages, setImage, shotting } = props;\n  const { latitude, longitude, key } = image;\n  const windowSize = useWindowSize();\n  const [viewport, setViewport] = useState({\n    latitude,\n    longitude,\n    width: 400,\n    height: 400,\n    zoom: 7,\n  });\n  return (\n    <ReactMapGL\n      {...Object.assign(viewport, {\n        width: windowSize ? windowSize.width : 0,\n        height: windowSize ? (windowSize.height - windowSize.width + 50) : 0,\n      })}\n      onViewportChange={setViewport}\n      style={{ display: shotting ? 'none' : 'inherit', position: 'absolute', bottom: 0, width: '100%' }}\n      mapStyle='mapbox://styles/mapbox/streets-v11'\n    >\n      {\n        allImages.map(i => (\n          <Marker\n            latitude={i.latitude}\n            longitude={i.longitude}\n            key={i.key}\n            offsetLeft={-20}\n            offsetTop={-10}\n          >\n            {i.key === key ? <RoomIcon color='secondary' /> : <RoomIcon color='primary' onClick={() => setImage(i)} />}\n          </Marker>\n        ))\n      }\n    </ReactMapGL>\n  )\n}\n\nexport default Map;","import React, { useState, useEffect } from 'react';\n\nimport Kaodashi from './components/Kaodashi';\nimport Control from './components/Control';\nimport Map from './components/Map';\nimport useWindowSize from './hooks/useWindowSize';\nimport Image from './types/Image';\nimport data from './data.json';\n\nfunction pickRandomImage(data: Image[]) {\n  return data[Math.floor(Math.random() * Math.floor(data.length))];\n}\n\nfunction App() {\n  const [shotting, setShotting] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [image, setImage] = useState<Image | null>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    const params = new URLSearchParams(document.location.search.substring(1));\n    const key = params.get('key');\n    let pickedImage;\n    if (key) {\n      for (const image of data) {\n        if (image.key === key) {\n          pickedImage = image;\n          break;\n        }\n      }\n    }\n    if (!pickedImage) {\n      pickedImage = pickRandomImage(data);\n    }\n    setImage(pickedImage);\n  }, [])\n\n  if (!image || !windowSize) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <Map\n        image={image}\n        allImages={data}\n        setImage={(image: Image) => { setImageLoaded(false); setImage(image) }}\n        shotting={shotting}\n      />\n      <Kaodashi\n        shotting={shotting}\n        setShotting={setShotting}\n        image={image}\n        imageLoaded={imageLoaded}\n        setImageLoaded={setImageLoaded}\n        windowWidth={windowSize.width}\n      />\n      {!shotting && imageLoaded && (\n        <Control\n          windowWidth={windowSize.width}\n          takeScreenShot={() => setShotting(true)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}